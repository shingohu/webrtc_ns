// ignore_for_file: always_specify_types
// ignore_for_file: camel_case_types
// ignore_for_file: non_constant_identifier_names

// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint
import 'dart:ffi' as ffi;

/// Bindings for `src/webrtc_ns.h`.
///
/// Regenerate bindings with `dart run ffigen --config ffigen.yaml`.
///
class WebrtcNsBindings {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  WebrtcNsBindings(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  WebrtcNsBindings.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  int webrtc_ns_init(
    int sample_rate,
    int level,
  ) {
    return _webrtc_ns_init(
      sample_rate,
      level,
    );
  }

  late final _webrtc_ns_initPtr =
      _lookup<ffi.NativeFunction<ffi.Int Function(ffi.Int, ffi.Int)>>(
          'webrtc_ns_init');
  late final _webrtc_ns_init =
      _webrtc_ns_initPtr.asFunction<int Function(int, int)>();

  int webrtc_ns_process(
    ffi.Pointer<ffi.Int16> src_audio_data,
    int length,
  ) {
    return _webrtc_ns_process(
      src_audio_data,
      length,
    );
  }

  late final _webrtc_ns_processPtr = _lookup<
          ffi
          .NativeFunction<ffi.Int Function(ffi.Pointer<ffi.Int16>, ffi.Int64)>>(
      'webrtc_ns_process');
  late final _webrtc_ns_process = _webrtc_ns_processPtr
      .asFunction<int Function(ffi.Pointer<ffi.Int16>, int)>();

  void webrtc_ns_destroy() {
    return _webrtc_ns_destroy();
  }

  late final _webrtc_ns_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function()>>('webrtc_ns_destroy');
  late final _webrtc_ns_destroy =
      _webrtc_ns_destroyPtr.asFunction<void Function()>();
}
